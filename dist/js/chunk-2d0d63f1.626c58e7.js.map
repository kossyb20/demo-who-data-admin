{"version":3,"sources":["webpack:///./src/views/Dashboard.vue?e13c","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?7235","webpack:///./src/views/Dashboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fill-height","fluid","grid-list-xl","justify-center","wrap","sm4","xs12","md4","lg4","label","prepend-icon","type","model","value","callback","$$v","fromDate","expression","toDate","color","block","on","click","setDateRange","_v","sm6","md6","lg3","title","_s","getTotalDeliveries","getNormalDelivery","getCesareanSection","getAssistedDelivery","getLiveBirths","getStillBirths","getFreshStillBirths","getPreterm","getKMC","uterotonicReceived","breastfed","babiesWeighted","femaleLess2_5","femaleMore2_5","maleLess2_5","maleMore2_5","staticRenderFns","download_csv","csv","filename","csvFile","downloadLink","Blob","document","createElement","download","href","window","URL","createObjectURL","style","display","body","appendChild","export_table_to_csv","html","rows","querySelectorAll","i","length","row","cols","j","push","innerText","join","Dashboardvue_type_script_lang_js_","data","entries","search","headers","text","sortable","date","Date","toISOString","substr","menu","getFullYear","dhisData","element","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","methods","getAllData","_this","axios_default","a","get","urls","getAllEntries","then","res","catch","err","$alertify","error","janCount","febCount","marCount","aprCount","mayCount","junCount","julCount","augCount","sepCount","octCount","novCount","decCount","forEach","entry","index","key","year","getUTCMonth","vals","gender","life","weight","setDate","_this2","getDateFilteredEntries","_this3","console","log","getDateRangeFilteredEntries","csvExport","querySelector","outerHTML","refresh","created","views_Dashboardvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d63f1.626c58e7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fill-height\":\"\",\"fluid\":\"\",\"grid-list-xl\":\"\"}},[_c('v-layout',{attrs:{\"justify-center\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"sm4\":\"\",\"xs12\":\"\",\"md4\":\"\",\"lg4\":\"\"}},[_c('v-form',[_c('v-text-field',{attrs:{\"label\":\"Date From\",\"prepend-icon\":\"mdi-calendar\",\"type\":\"date\"},model:{value:(_vm.fromDate),callback:function ($$v) {_vm.fromDate=$$v},expression:\"fromDate\"}})],1)],1),_c('v-flex',{attrs:{\"sm4\":\"\",\"xs12\":\"\",\"md4\":\"\",\"lg4\":\"\"}},[_c('v-form',[_c('v-text-field',{attrs:{\"label\":\"Date To\",\"prepend-icon\":\"mdi-calendar\",\"type\":\"date\"},model:{value:(_vm.toDate),callback:function ($$v) {_vm.toDate=$$v},expression:\"toDate\"}})],1)],1),_c('v-flex',{attrs:{\"sm4\":\"\",\"xs12\":\"\",\"md4\":\"\",\"lg4\":\"\"}},[_c('v-btn',{attrs:{\"color\":\"blue\",\"block\":\"\"},on:{\"click\":_vm.setDateRange}},[_vm._v(\"Apply\")])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"X-Deliveries - Total\"}},[_c('h2',[_vm._v(_vm._s(_vm.getTotalDeliveries()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Deliveries - Normal\"}},[_c('h2',[_vm._v(_vm._s(_vm.getNormalDelivery()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Deliveries - Caesarian section\"}},[_c('h2',[_vm._v(_vm._s(_vm.getCesareanSection()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Deliveries - Assisted \"}},[_c('h2',[_vm._v(_vm._s(_vm.getAssistedDelivery()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"X-Live births (Total)\"}},[_c('h2',[_vm._v(_vm._s(_vm.getLiveBirths()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"X_Still birth\"}},[_c('h2',[_vm._v(_vm._s(_vm.getStillBirths()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Still birth - Fresh\"}},[_c('h2',[_vm._v(_vm._s(_vm.getFreshStillBirths()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Preterm deliveries \"}},[_c('h2',[_vm._v(_vm._s(_vm.getPreterm()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Newborn placed on KMC\"}},[_c('h2',[_vm._v(_vm._s(_vm.getKMC()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Mothers who received uterotonic\"}},[_c('h2',[_vm._v(_vm._s(_vm.uterotonicReceived()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Babies breastfed within 1hr of delivery\"}},[_c('h2',[_vm._v(_vm._s(_vm.breastfed()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Babies weighed at birth (live & still births) \"}},[_c('h2',[_vm._v(_vm._s(_vm.babiesWeighted()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Live Birth Female, <2.5kg\"}},[_c('h2',[_vm._v(_vm._s(_vm.femaleLess2_5()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Live Birth Female, >2.5kg\"}},[_c('h2',[_vm._v(_vm._s(_vm.femaleMore2_5()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Live Birth Male, <2.5kg\"}},[_c('h2',[_vm._v(_vm._s(_vm.maleLess2_5()))])])],1),_c('v-flex',{attrs:{\"sm6\":\"\",\"xs12\":\"\",\"md6\":\"\",\"lg3\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":\"Live Birth Male, >2.5kg\"}},[_c('h2',[_vm._v(_vm._s(_vm.maleMore2_5()))])])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container\r\n    fill-height\r\n    fluid\r\n    grid-list-xl\r\n  >\r\n    <v-layout\r\n      justify-center\r\n      wrap\r\n    >\r\n\r\n      <!-- <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg6\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"date\" label=\"Filter By Date of Birth\" prepend-icon=\"mdi-calendar\" type=\"date\"  @input=\"setDate\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex> -->\r\n      <!-- <v-flex\r\n        sm12\r\n        xs12\r\n        md12\r\n        lg12\r\n      >\r\n      <v-form>\r\n         <v-btn @click=\"refresh\" color=\"blue\" block>Refresh</v-btn>\r\n      </v-form>\r\n\r\n      </v-flex> -->\r\n      <v-flex\r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"fromDate\" label=\"Date From\" prepend-icon=\"mdi-calendar\" type=\"date\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex>\r\n       <v-flex\r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"toDate\" label=\"Date To\" prepend-icon=\"mdi-calendar\" type=\"date\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex>\r\n      <v-flex      \r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-btn @click=\"setDateRange\" color=\"blue\" block>Apply</v-btn>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X-Deliveries - Total\">\r\n          <h2>{{ getTotalDeliveries() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Normal\">\r\n          <h2>{{ getNormalDelivery() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Caesarian section\">\r\n          <h2>{{ getCesareanSection() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Assisted \">\r\n          <h2>{{ getAssistedDelivery() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X-Live births (Total)\">\r\n          <h2>{{ getLiveBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X_Still birth\">\r\n          <h2>{{ getStillBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Still birth - Fresh\">\r\n          <h2>{{ getFreshStillBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Preterm deliveries \">\r\n          <h2>{{ getPreterm() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Newborn placed on KMC\">\r\n          <h2>{{ getKMC() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Mothers who received uterotonic\">\r\n          <h2>{{ uterotonicReceived() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Babies breastfed within 1hr of delivery\">\r\n          <h2>{{ breastfed() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Babies weighed at birth (live & still births) \">\r\n          <h2>{{ babiesWeighted() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Female, <2.5kg\">\r\n          <h2>{{ femaleLess2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Female, >2.5kg\">\r\n          <h2>{{ femaleMore2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Male, <2.5kg\">\r\n          <h2>{{ maleLess2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Male, >2.5kg\">\r\n          <h2>{{ maleMore2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <!-- <v-flex\r\n        md12\r\n      >\r\n        <material-card\r\n          color=\"blue\"\r\n          :title=\"title\"\r\n          text=\"\"\r\n        >\r\n        <v-btn color=\"blue\" @click=\"csvExport\">Download</v-btn>\r\n        <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"dhisData\"\r\n        hide-actions\r\n        >\r\n        <template\r\n          slot=\"headerCell\"\r\n          slot-scope=\"{ header }\"\r\n        >\r\n         <span\r\n            class=\"font-weight-light text-info text--darken-3\"\r\n            v-text=\"header.text\"\r\n          />\r\n        </template>\r\n        <template v-slot:items=\"props\">\r\n            <tr>\r\n            <td>{{ props.item.element }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jan }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.feb }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.mar }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.apr }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.may }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jun }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jul }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.aug }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.sep }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.oct }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.nov }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.dec }}</td>\r\n            </tr>\r\n          </template>\r\n  \r\n        </v-data-table>\r\n        </material-card>\r\n      </v-flex> -->\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n\r\n// const moment = require('moment');\r\n\r\n  function download_csv(csv, filename) {\r\n    var csvFile;\r\n    var downloadLink;\r\n\r\n    // CSV FILE\r\n    csvFile = new Blob([csv], {type: \"text/csv\"});\r\n\r\n    // Download link\r\n    downloadLink = document.createElement(\"a\");\r\n\r\n    // File name\r\n    downloadLink.download = filename;\r\n\r\n    // We have to create a link to the file\r\n    downloadLink.href = window.URL.createObjectURL(csvFile);\r\n\r\n    // Make sure that the link is not displayed\r\n    downloadLink.style.display = \"none\";\r\n\r\n    // Add the link to your DOM\r\n    document.body.appendChild(downloadLink);\r\n\r\n    // Lanzamos\r\n    downloadLink.click();\r\n}\r\n\r\nfunction export_table_to_csv(html, filename) {\r\n\tvar csv = [];\r\n\tvar rows = document.querySelectorAll(\"table tr\");\r\n\t\r\n    for (var i = 0; i < rows.length; i++) {\r\n\t\tvar row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n\t\t\r\n        for (var j = 0; j < cols.length; j++) \r\n            row.push(cols[j].innerText);\r\n        \r\n\t\tcsv.push(row.join(\",\"));\t\t\r\n\t}\r\n\r\n    // Download CSV\r\n    download_csv(csv.join(\"\\n\"), filename);\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    data () {\r\n      return {\r\n        entries: [],\r\n        search: '',\r\n        headers: [\r\n          {text: 'DHIS - Data Elements', sortable: false},\r\n          {text: 'January', sortable: false},\r\n          {text: 'February', sortable: false},\r\n          {text: 'March', sortable: false},\r\n          {text: 'April', sortable: false},\r\n          {text: 'May', sortable: false},\r\n          {text: 'June', sortable: false},\r\n          {text: 'July', sortable: false},\r\n          {text: 'August', sortable: false},\r\n          {text: 'September', sortable: false},\r\n          {text: 'October', sortable: false},\r\n          {text: 'November', sortable: false},\r\n          {text: 'December', sortable: false},\r\n          \r\n     \r\n\r\n        ],\r\n        date: new Date().toISOString().substr(0, 10),\r\n        fromDate: new Date().toISOString().substr(0, 10),\r\n        toDate: new Date().toISOString().substr(0, 10),\r\n        menu: false,\r\n        title: 'DHIS Data Elements ' + new Date().getFullYear(),\r\n        dhisData: [\r\n          { element: 'X-Deliveries - Total', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Normal', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Caesarian section', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Assisted ', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'X_Live births (total)', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'X_Still birth', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Still birth - Fresh', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Preterm deliveries', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Mothers who received uterotonic', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Babies who are breatfed within one hour of delivery', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Babies who are weighed at birth', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Female <2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Female >2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Male <2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Male >2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          ]\r\n        \r\n      }\r\n    },\r\n    methods: {\r\n      getAllData(){\r\n          axios.get(this.urls.getAllEntries)\r\n          .then(res => this.entries = res.data.entries)\r\n          .catch(err => this.$alertify.error('FAILED: ' + err));\r\n      },\r\n      getTotalDeliveries(){\r\n        \r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'dateOfBirth'){\r\n              let value = entry[key]\r\n              let year = new Date(value).getFullYear()\r\n              if (year ===  new Date().getFullYear()){\r\n                switch (new Date(value).getUTCMonth()){\r\n                  case 0:\r\n                    janCount += 1\r\n                    break\r\n                  case 1:\r\n                    febCount += 1\r\n                    break\r\n                  case 2:\r\n                    marCount += 1\r\n                    break\r\n                  case 3:\r\n                    aprCount += 1\r\n                    break\r\n                  case 4:\r\n                    mayCount += 1\r\n                    break\r\n                  case 5:\r\n                    junCount += 1\r\n                    break\r\n                  case 6:\r\n                    julCount += 1\r\n                    break\r\n                  case 7:\r\n                    augCount += 1\r\n                    break\r\n                  case 8:\r\n                    sepCount += 1\r\n                    break\r\n                  case 9:\r\n                    octCount += 1\r\n                    break\r\n                  case 10:\r\n                    novCount += 1\r\n                    break\r\n                  case 11:\r\n                    decCount += 1\r\n                    break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[0].jan = janCount\r\n        this.dhisData[0].feb = febCount\r\n        this.dhisData[0].mar = marCount\r\n        this.dhisData[0].apr = aprCount\r\n        this.dhisData[0].may = mayCount\r\n        this.dhisData[0].jun = junCount\r\n        this.dhisData[0].jul = julCount\r\n        this.dhisData[0].aug = augCount\r\n        this.dhisData[0].sep = sepCount\r\n        this.dhisData[0].oct = octCount\r\n        this.dhisData[0].nov = novCount\r\n        this.dhisData[0].dec = decCount\r\n        return this.entries.length\r\n      },\r\n      getNormalDelivery(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        \r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value !== 'Cesarean Section' && value !== 'Assisted delivery (forceps or vent use)'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[1].jan = janCount\r\n        this.dhisData[1].feb = febCount\r\n        this.dhisData[1].mar = marCount\r\n        this.dhisData[1].apr = aprCount\r\n        this.dhisData[1].may = mayCount\r\n        this.dhisData[1].jun = junCount\r\n        this.dhisData[1].jul = julCount\r\n        this.dhisData[1].aug = augCount\r\n        this.dhisData[1].sep = sepCount\r\n        this.dhisData[1].oct = octCount\r\n        this.dhisData[1].nov = novCount\r\n        this.dhisData[1].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getCesareanSection(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value === 'Cesarean Section'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[2].jan = janCount\r\n        this.dhisData[2].feb = febCount\r\n        this.dhisData[2].mar = marCount\r\n        this.dhisData[2].apr = aprCount\r\n        this.dhisData[2].may = mayCount\r\n        this.dhisData[2].jun = junCount\r\n        this.dhisData[2].jul = julCount\r\n        this.dhisData[2].aug = augCount\r\n        this.dhisData[2].sep = sepCount\r\n        this.dhisData[2].oct = octCount\r\n        this.dhisData[2].nov = novCount\r\n        this.dhisData[2].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getAssistedDelivery(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value === 'Assisted delivery (forceps or vent use)'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[3].jan = janCount\r\n        this.dhisData[3].feb = febCount\r\n        this.dhisData[3].mar = marCount\r\n        this.dhisData[3].apr = aprCount\r\n        this.dhisData[3].may = mayCount\r\n        this.dhisData[3].jun = junCount\r\n        this.dhisData[3].jul = julCount\r\n        this.dhisData[3].aug = augCount\r\n        this.dhisData[3].sep = sepCount\r\n        this.dhisData[3].oct = octCount\r\n        this.dhisData[3].nov = novCount\r\n        this.dhisData[3].dec = decCount\r\n        return vals.length\r\n      },\r\n      getLiveBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[4].jan = janCount\r\n        this.dhisData[4].feb = febCount\r\n        this.dhisData[4].mar = marCount\r\n        this.dhisData[4].apr = aprCount\r\n        this.dhisData[4].may = mayCount\r\n        this.dhisData[4].jun = junCount\r\n        this.dhisData[4].jul = julCount\r\n        this.dhisData[4].aug = augCount\r\n        this.dhisData[4].sep = sepCount\r\n        this.dhisData[4].oct = octCount\r\n        this.dhisData[4].nov = novCount\r\n        this.dhisData[4].dec = decCount\r\n        return vals.length\r\n      },\r\n      getStillBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === false){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[5].jan = janCount\r\n        this.dhisData[5].feb = febCount\r\n        this.dhisData[5].mar = marCount\r\n        this.dhisData[5].apr = aprCount\r\n        this.dhisData[5].may = mayCount\r\n        this.dhisData[5].jun = junCount\r\n        this.dhisData[5].jul = julCount\r\n        this.dhisData[5].aug = augCount\r\n        this.dhisData[5].sep = sepCount\r\n        this.dhisData[5].oct = octCount\r\n        this.dhisData[5].nov = novCount\r\n        this.dhisData[5].dec = decCount\r\n        \r\n        return vals.length\r\n      },\r\n      getFreshStillBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === false){\r\n                if (entry['babyTimeOfDeath'] !== 'before labour'){\r\n                  vals.push(entry['babyTimeOfDeath'])\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === new Date().getFullYear()){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[6].jan = janCount\r\n        this.dhisData[6].feb = febCount\r\n        this.dhisData[6].mar = marCount\r\n        this.dhisData[6].apr = aprCount\r\n        this.dhisData[6].may = mayCount\r\n        this.dhisData[6].jun = junCount\r\n        this.dhisData[6].jul = julCount\r\n        this.dhisData[6].aug = augCount\r\n        this.dhisData[6].sep = sepCount\r\n        this.dhisData[6].oct = octCount\r\n        this.dhisData[6].nov = novCount\r\n        this.dhisData[6].dec = decCount\r\n        \r\n        return vals.length\r\n      },\r\n      getPreterm(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'isPreterm'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[7].jan = janCount\r\n        this.dhisData[7].feb = febCount\r\n        this.dhisData[7].mar = marCount\r\n        this.dhisData[7].apr = aprCount\r\n        this.dhisData[7].may = mayCount\r\n        this.dhisData[7].jun = junCount\r\n        this.dhisData[7].jul = julCount\r\n        this.dhisData[7].aug = augCount\r\n        this.dhisData[7].sep = sepCount\r\n        this.dhisData[7].oct = octCount\r\n        this.dhisData[7].nov = novCount\r\n        this.dhisData[7].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getKMC(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'skinToSkin'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[8].jan = janCount\r\n        this.dhisData[8].feb = febCount\r\n        this.dhisData[8].mar = marCount\r\n        this.dhisData[8].apr = aprCount\r\n        this.dhisData[8].may = mayCount\r\n        this.dhisData[8].jun = junCount\r\n        this.dhisData[8].jul = julCount\r\n        this.dhisData[8].aug = augCount\r\n        this.dhisData[8].sep = sepCount\r\n        this.dhisData[8].oct = octCount\r\n        this.dhisData[8].nov = novCount\r\n        this.dhisData[8].dec = decCount\r\n        return vals.length\r\n      },\r\n      uterotonicReceived(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'uterotonicAdmin'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[8].jan = janCount\r\n        this.dhisData[8].feb = febCount\r\n        this.dhisData[8].mar = marCount\r\n        this.dhisData[8].apr = aprCount\r\n        this.dhisData[8].may = mayCount\r\n        this.dhisData[8].jun = junCount\r\n        this.dhisData[8].jul = julCount\r\n        this.dhisData[8].aug = augCount\r\n        this.dhisData[8].sep = sepCount\r\n        this.dhisData[8].oct = octCount\r\n        this.dhisData[8].nov = novCount\r\n        this.dhisData[8].dec = decCount\r\n        return vals.length\r\n      },\r\n      breastfed(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'breastfeedingTime'){\r\n              let value = entry[key]\r\n              if (value !== ''){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[9].jan = janCount\r\n        this.dhisData[9].feb = febCount\r\n        this.dhisData[9].mar = marCount\r\n        this.dhisData[9].apr = aprCount\r\n        this.dhisData[9].may = mayCount\r\n        this.dhisData[9].jun = junCount\r\n        this.dhisData[9].jul = julCount\r\n        this.dhisData[9].aug = augCount\r\n        this.dhisData[9].sep = sepCount\r\n        this.dhisData[9].oct = octCount\r\n        this.dhisData[9].nov = novCount\r\n        this.dhisData[9].dec = decCount\r\n        return vals.length\r\n      },\r\n      babiesWeighted(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyWeight'){\r\n              let value = entry[key]\r\n              if (value !== 0){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === new Date().getFullYear()){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[10].jan = janCount\r\n        this.dhisData[10].feb = febCount\r\n        this.dhisData[10].mar = marCount\r\n        this.dhisData[10].apr = aprCount\r\n        this.dhisData[10].may = mayCount\r\n        this.dhisData[10].jun = junCount\r\n        this.dhisData[10].jul = julCount\r\n        this.dhisData[10].aug = augCount\r\n        this.dhisData[10].sep = sepCount\r\n        this.dhisData[10].oct = octCount\r\n        this.dhisData[10].nov = novCount\r\n        this.dhisData[10].dec = decCount\r\n        return vals.length\r\n      },\r\n      femaleLess2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'female' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight <= 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === new Date().getFullYear()){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[11].jan = janCount\r\n        this.dhisData[11].feb = febCount\r\n        this.dhisData[11].mar = marCount\r\n        this.dhisData[11].apr = aprCount\r\n        this.dhisData[11].may = mayCount\r\n        this.dhisData[11].jun = junCount\r\n        this.dhisData[11].jul = julCount\r\n        this.dhisData[11].aug = augCount\r\n        this.dhisData[11].sep = sepCount\r\n        this.dhisData[11].oct = octCount\r\n        this.dhisData[11].nov = novCount\r\n        this.dhisData[11].dec = decCount\r\n        return vals.length\r\n      },\r\n      femaleMore2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'female' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight > 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === new Date().getFullYear()){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[12].jan = janCount\r\n        this.dhisData[12].feb = febCount\r\n        this.dhisData[12].mar = marCount\r\n        this.dhisData[12].apr = aprCount\r\n        this.dhisData[12].may = mayCount\r\n        this.dhisData[12].jun = junCount\r\n        this.dhisData[12].jul = julCount\r\n        this.dhisData[12].aug = augCount\r\n        this.dhisData[12].sep = sepCount\r\n        this.dhisData[12].oct = octCount\r\n        this.dhisData[12].nov = novCount\r\n        this.dhisData[12].dec = decCount\r\n        return vals.length\r\n      },\r\n      maleLess2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'male' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight <= 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === new Date().getFullYear()){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[13].jan = janCount\r\n        this.dhisData[13].feb = febCount\r\n        this.dhisData[13].mar = marCount\r\n        this.dhisData[13].apr = aprCount\r\n        this.dhisData[13].may = mayCount\r\n        this.dhisData[13].jun = junCount\r\n        this.dhisData[13].jul = julCount\r\n        this.dhisData[13].aug = augCount\r\n        this.dhisData[13].sep = sepCount\r\n        this.dhisData[13].oct = octCount\r\n        this.dhisData[13].nov = novCount\r\n        this.dhisData[13].dec = decCount\r\n        return vals.length\r\n      },\r\n      maleMore2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'male' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight > 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === new Date().getFullYear()){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[14].jan = janCount\r\n        this.dhisData[14].feb = febCount\r\n        this.dhisData[14].mar = marCount\r\n        this.dhisData[14].apr = aprCount\r\n        this.dhisData[14].may = mayCount\r\n        this.dhisData[14].jun = junCount\r\n        this.dhisData[14].jul = julCount\r\n        this.dhisData[14].aug = augCount\r\n        this.dhisData[14].sep = sepCount\r\n        this.dhisData[14].oct = octCount\r\n        this.dhisData[14].nov = novCount\r\n        this.dhisData[14].dec = decCount\r\n        return vals.length\r\n      },\r\n      setDate() {\r\n\r\n        axios.get(this.urls.getDateFilteredEntries+'/?dateFilter='+this.date)\r\n        .then(res => this.entries = res.data.entries)\r\n        .catch(err => this.$alertify.error('FAILED: ' + err));\r\n      },\r\n      setDateRange(){\r\n        console.log(this.fromDate)\r\n        console.log(this.toDate)\r\n        axios.get(this.urls.getDateRangeFilteredEntries+'/?fromDate='+this.fromDate+'&toDate='+this.toDate)\r\n        .then(res => this.entries = res.data.entries)\r\n        .catch(err => this.$alertify.error('FAILED: ' + err));\r\n        \r\n      },\r\n\r\n      csvExport() {\r\n          var html = document.querySelector(\"table\").outerHTML;\r\n          export_table_to_csv(html, \"DHIS Data Elements.csv\");\r\n      },\r\n      refresh(){\r\n        this.getAllData()\r\n        this.fromDate = new Date().toISOString().substr(0, 10)\r\n        this.toDate = new Date().toISOString().substr(0, 10)\r\n\r\n      }\r\n\r\n    },\r\n\r\n    created() {\r\n      console.log(process.env.NODE_ENV)\r\n      console.log(process.env.VUE_APP_BASE_URL)\r\n\r\n      this.getAllData()\r\n\r\n\r\n      \r\n      \r\n    },\r\n    \r\n\r\n  }\r\n\r\n  \r\n\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=45af3e3e&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}