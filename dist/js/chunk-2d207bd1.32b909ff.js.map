{"version":3,"sources":["webpack:///./src/views/AnnualSummaries.vue?da3e","webpack:///src/views/AnnualSummaries.vue","webpack:///./src/views/AnnualSummaries.vue?464f","webpack:///./src/views/AnnualSummaries.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fill-height","fluid","grid-list-xl","justify-center","wrap","md12","color","title","setTitle","text","on","click","csvExport","_v","refresh","hidden","_s","getTotalDeliveries","getNormalDelivery","getCesareanSection","getAssistedDelivery","getLiveBirths","getStillBirths","getFreshStillBirths","getPreterm","uterotonicReceived","breastfed","babiesWeighted","femaleLess2_5","femaleMore2_5","maleLess2_5","maleMore2_5","items","years","box","label","input","$event","getYearData","model","value","callback","$$v","yearSelected","expression","headers","dhisData","hide-actions","scopedSlots","_u","key","fn","ref","header","staticClass","domProps","textContent","props","item","element","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","staticRenderFns","download_csv","csv","filename","csvFile","downloadLink","Blob","type","document","createElement","download","href","window","URL","createObjectURL","style","display","body","appendChild","export_table_to_csv","html","rows","querySelectorAll","i","length","row","cols","j","push","innerText","join","AnnualSummariesvue_type_script_lang_js_","data","entries","search","sortable","date","Date","toISOString","substr","fromDate","toDate","menu","methods","getAllData","_this","axios_default","a","get","urls","getAllEntries","then","res","catch","err","$alertify","error","_this2","janCount","febCount","marCount","aprCount","mayCount","junCount","julCount","augCount","sepCount","octCount","novCount","decCount","forEach","entry","index","year","getFullYear","getUTCMonth","_this3","vals","_this4","_this5","_this6","_this7","_this8","_this9","getKMC","_this10","_this11","_this12","_this13","_this14","gender","life","weight","_this15","_this16","_this17","setDate","_this18","getDateFilteredEntries","setDateRange","_this19","console","log","getDateRangeFilteredEntries","querySelector","outerHTML","created","mounted","views_AnnualSummariesvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d207bd1.32b909ff.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fill-height\":\"\",\"fluid\":\"\",\"grid-list-xl\":\"\"}},[_c('v-layout',{attrs:{\"justify-center\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('material-card',{attrs:{\"color\":\"blue\",\"title\":_vm.setTitle(),\"text\":\"\"}},[_c('v-btn',{attrs:{\"color\":\"blue\"},on:{\"click\":_vm.csvExport}},[_vm._v(\"Download\")]),_c('v-btn',{attrs:{\"color\":\"blue\"},on:{\"click\":_vm.refresh}},[_vm._v(\"Refresh\")]),_c('h4',{attrs:{\"hidden\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.getTotalDeliveries())+\" \"+_vm._s(_vm.getNormalDelivery())+\" \"+_vm._s(_vm.getCesareanSection())+\" \"+_vm._s(_vm.getAssistedDelivery())+\" \"+_vm._s(_vm.getLiveBirths())+\"\\n        \"+_vm._s(_vm.getStillBirths())+\" \"+_vm._s(_vm.getFreshStillBirths())+\" \"+_vm._s(_vm.getPreterm())+\" \"+_vm._s(_vm.uterotonicReceived())+\" \"+_vm._s(_vm.breastfed())+\" \"+_vm._s(_vm.babiesWeighted())+\"  \\n        \"+_vm._s(_vm.femaleLess2_5())+\" \"+_vm._s(_vm.femaleMore2_5())+\" \"+_vm._s(_vm.maleLess2_5())+\" \"+_vm._s(_vm.maleMore2_5()))]),_c('v-select',{attrs:{\"items\":_vm.years,\"box\":\"\",\"label\":\"Year\"},on:{\"input\":function($event){return _vm.getYearData()}},model:{value:(_vm.yearSelected),callback:function ($$v) {_vm.yearSelected=$$v},expression:\"yearSelected\"}}),_c('v-data-table',{attrs:{\"headers\":_vm.headers,\"items\":_vm.dhisData,\"hide-actions\":\"\"},scopedSlots:_vm._u([{key:\"headerCell\",fn:function(ref){\nvar header = ref.header;\nreturn [_c('span',{staticClass:\"font-weight-light text-info text--darken-3\",domProps:{\"textContent\":_vm._s(header.text)}})]}},{key:\"items\",fn:function(props){return [_c('tr',[_c('td',[_vm._v(_vm._s(props.item.element))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.jan))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.feb))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.mar))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.apr))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.may))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.jun))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.jul))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.aug))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.sep))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.oct))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.nov))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.dec))])])]}}])})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container\r\n    fill-height\r\n    fluid\r\n    grid-list-xl\r\n  >\r\n    <v-layout\r\n      justify-center\r\n      wrap\r\n    >\r\n\r\n      <!-- <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg6\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"date\" label=\"Filter By Date of Birth\" prepend-icon=\"mdi-calendar\" type=\"date\"  @input=\"setDate\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex> -->\r\n      <!-- <v-flex\r\n        sm12\r\n        xs12\r\n        md12\r\n        lg12\r\n      >\r\n      <v-form>\r\n         <v-btn @click=\"refresh\" color=\"blue\" block>Refresh</v-btn>\r\n      </v-form>\r\n\r\n      </v-flex> -->\r\n      <!-- <v-flex\r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"fromDate\" label=\"Date From\" prepend-icon=\"mdi-calendar\" type=\"date\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex>\r\n       <v-flex\r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-form>\r\n        <v-text-field v-model=\"toDate\" label=\"Date To\" prepend-icon=\"mdi-calendar\" type=\"date\"></v-text-field>\r\n      </v-form>\r\n\r\n      </v-flex>\r\n      <v-flex      \r\n        sm4\r\n        xs12\r\n        md4\r\n        lg4\r\n      >\r\n      <v-btn @click=\"setDateRange\" color=\"blue\" block>Apply</v-btn>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X-Deliveries - Total\">\r\n          <h2>{{ getTotalDeliveries() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Normal\">\r\n          <h2>{{ getNormalDelivery() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Caesarian section\">\r\n          <h2>{{ getCesareanSection() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Deliveries - Assisted \">\r\n          <h2>{{ getAssistedDelivery() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X-Live births (Total)\">\r\n          <h2>{{ getLiveBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"X_Still birth\">\r\n          <h2>{{ getStillBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Still birth - Fresh\">\r\n          <h2>{{ getFreshStillBirths() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Preterm deliveries \">\r\n          <h2>{{ getPreterm() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Newborn placed on KMC\">\r\n          <h2>{{ getKMC() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Mothers who received uterotonic\">\r\n          <h2>{{ uterotonicReceived() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Babies breastfed within 1hr of delivery\">\r\n          <h2>{{ breastfed() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Babies weighed at birth (live & still births) \">\r\n          <h2>{{ babiesWeighted() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Female, <2.5kg\">\r\n          <h2>{{ femaleLess2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Female, >2.5kg\">\r\n          <h2>{{ femaleMore2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Male, <2.5kg\">\r\n          <h2>{{ maleLess2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex>\r\n      <v-flex\r\n        sm6\r\n        xs12\r\n        md6\r\n        lg3\r\n      >\r\n        <material-card color=\"blue\" title=\"Live Birth Male, >2.5kg\">\r\n          <h2>{{ maleMore2_5() }}</h2>\r\n        </material-card>\r\n      </v-flex> -->\r\n      <v-flex\r\n        md12\r\n      >\r\n        <material-card\r\n          color=\"blue\"\r\n          :title=\"setTitle()\"\r\n          text=\"\"\r\n        >\r\n        <v-btn color=\"blue\" @click=\"csvExport\">Download</v-btn><v-btn color=\"blue\" @click=\"refresh\">Refresh</v-btn>\r\n        <h4 hidden> {{getTotalDeliveries()}} {{getNormalDelivery()}} {{getCesareanSection()}} {{getAssistedDelivery()}} {{getLiveBirths()}}\r\n          {{getStillBirths()}} {{getFreshStillBirths()}} {{getPreterm()}} {{uterotonicReceived()}} {{breastfed()}} {{babiesWeighted()}}  \r\n          {{femaleLess2_5()}} {{femaleMore2_5()}} {{maleLess2_5()}} {{maleMore2_5()}}</h4>\r\n        <v-select :items=\"years\" v-model=\"yearSelected\" @input=\"getYearData()\" box label=\"Year\"></v-select>\r\n        <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"dhisData\"\r\n        hide-actions\r\n        >\r\n        <template\r\n          slot=\"headerCell\"\r\n          slot-scope=\"{ header }\"\r\n        >\r\n         <span\r\n            class=\"font-weight-light text-info text--darken-3\"\r\n            v-text=\"header.text\"\r\n          />\r\n        </template>\r\n        <template v-slot:items=\"props\">\r\n            <tr>\r\n            <td>{{ props.item.element }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jan }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.feb }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.mar }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.apr }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.may }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jun }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.jul }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.aug }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.sep }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.oct }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.nov }}</td>\r\n            <td class=\"text-xs-right\">{{ props.item.dec }}</td>\r\n            </tr>\r\n          </template>\r\n  \r\n        </v-data-table>\r\n        </material-card>\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n\r\n// const moment = require('moment');\r\n\r\n  function download_csv(csv, filename) {\r\n    var csvFile;\r\n    var downloadLink;\r\n\r\n    // CSV FILE\r\n    csvFile = new Blob([csv], {type: \"text/csv\"});\r\n\r\n    // Download link\r\n    downloadLink = document.createElement(\"a\");\r\n\r\n    // File name\r\n    downloadLink.download = filename;\r\n\r\n    // We have to create a link to the file\r\n    downloadLink.href = window.URL.createObjectURL(csvFile);\r\n\r\n    // Make sure that the link is not displayed\r\n    downloadLink.style.display = \"none\";\r\n\r\n    // Add the link to your DOM\r\n    document.body.appendChild(downloadLink);\r\n\r\n    // Lanzamos\r\n    downloadLink.click();\r\n}\r\n\r\nfunction export_table_to_csv(html, filename) {\r\n\tvar csv = [];\r\n\tvar rows = document.querySelectorAll(\"table tr\");\r\n\t\r\n    for (var i = 0; i < rows.length; i++) {\r\n\t\tvar row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n\t\t\r\n        for (var j = 0; j < cols.length; j++) \r\n            row.push(cols[j].innerText);\r\n        \r\n\t\tcsv.push(row.join(\",\"));\t\t\r\n\t}\r\n\r\n    // Download CSV\r\n    download_csv(csv.join(\"\\n\"), filename);\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    data () {\r\n      return {\r\n        entries: [],\r\n        search: '',\r\n        headers: [\r\n          {text: 'Indicators', sortable: false},\r\n          {text: 'January', sortable: false},\r\n          {text: 'February', sortable: false},\r\n          {text: 'March', sortable: false},\r\n          {text: 'April', sortable: false},\r\n          {text: 'May', sortable: false},\r\n          {text: 'June', sortable: false},\r\n          {text: 'July', sortable: false},\r\n          {text: 'August', sortable: false},\r\n          {text: 'September', sortable: false},\r\n          {text: 'October', sortable: false},\r\n          {text: 'November', sortable: false},\r\n          {text: 'December', sortable: false},\r\n          \r\n     \r\n\r\n        ],\r\n        years: [2019, 2020, 2021, 2022, 2023, 2024, 2025],\r\n        yearSelected: 2019,\r\n        date: new Date().toISOString().substr(0, 10),\r\n        fromDate: new Date().toISOString().substr(0, 10),\r\n        toDate: new Date().toISOString().substr(0, 10),\r\n        menu: false,\r\n       \r\n        dhisData: [\r\n          { element: 'X-Deliveries - Total', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Normal', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Caesarian section', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Deliveries - Assisted ', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'X_Live births (total)', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'X_Still birth', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Still birth - Fresh', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Preterm deliveries', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Mothers who received uterotonic', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Babies who are breatfed within one hour of delivery', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Babies who are weighed at birth', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Female <2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Female >2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Male <2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          { element: 'Live Birth Male >2.5kg', jan: '6', feb: '4', mar: '6', apr: '7', may: '2', jun: '9', jul: '1', aug: '8', sep: '5', oct: '10', nov: '11', dec: '12'},\r\n          ]\r\n        \r\n      }\r\n    },\r\n    methods: {\r\n      getAllData(){\r\n          axios.get(this.urls.getAllEntries)\r\n          .then(res => this.entries = res.data.entries)\r\n          .catch(err => this.$alertify.error('FAILED: ' + err));\r\n      },\r\n      getTotalDeliveries(){\r\n        \r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'dateOfBirth'){\r\n              let value = entry[key]\r\n              let year = new Date(value).getFullYear()\r\n              if (year ===  this.yearSelected){\r\n                switch (new Date(value).getUTCMonth()){\r\n                  case 0:\r\n                    janCount += 1\r\n                    break\r\n                  case 1:\r\n                    febCount += 1\r\n                    break\r\n                  case 2:\r\n                    marCount += 1\r\n                    break\r\n                  case 3:\r\n                    aprCount += 1\r\n                    break\r\n                  case 4:\r\n                    mayCount += 1\r\n                    break\r\n                  case 5:\r\n                    junCount += 1\r\n                    break\r\n                  case 6:\r\n                    julCount += 1\r\n                    break\r\n                  case 7:\r\n                    augCount += 1\r\n                    break\r\n                  case 8:\r\n                    sepCount += 1\r\n                    break\r\n                  case 9:\r\n                    octCount += 1\r\n                    break\r\n                  case 10:\r\n                    novCount += 1\r\n                    break\r\n                  case 11:\r\n                    decCount += 1\r\n                    break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[0].jan = janCount\r\n        this.dhisData[0].feb = febCount\r\n        this.dhisData[0].mar = marCount\r\n        this.dhisData[0].apr = aprCount\r\n        this.dhisData[0].may = mayCount\r\n        this.dhisData[0].jun = junCount\r\n        this.dhisData[0].jul = julCount\r\n        this.dhisData[0].aug = augCount\r\n        this.dhisData[0].sep = sepCount\r\n        this.dhisData[0].oct = octCount\r\n        this.dhisData[0].nov = novCount\r\n        this.dhisData[0].dec = decCount\r\n        return this.entries.length\r\n      },\r\n      getNormalDelivery(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        \r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value !== 'Cesarean Section' && value !== 'Assisted delivery (forceps or vent use)'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[1].jan = janCount\r\n        this.dhisData[1].feb = febCount\r\n        this.dhisData[1].mar = marCount\r\n        this.dhisData[1].apr = aprCount\r\n        this.dhisData[1].may = mayCount\r\n        this.dhisData[1].jun = junCount\r\n        this.dhisData[1].jul = julCount\r\n        this.dhisData[1].aug = augCount\r\n        this.dhisData[1].sep = sepCount\r\n        this.dhisData[1].oct = octCount\r\n        this.dhisData[1].nov = novCount\r\n        this.dhisData[1].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getCesareanSection(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value === 'Cesarean Section'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[2].jan = janCount\r\n        this.dhisData[2].feb = febCount\r\n        this.dhisData[2].mar = marCount\r\n        this.dhisData[2].apr = aprCount\r\n        this.dhisData[2].may = mayCount\r\n        this.dhisData[2].jun = junCount\r\n        this.dhisData[2].jul = julCount\r\n        this.dhisData[2].aug = augCount\r\n        this.dhisData[2].sep = sepCount\r\n        this.dhisData[2].oct = octCount\r\n        this.dhisData[2].nov = novCount\r\n        this.dhisData[2].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getAssistedDelivery(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'deliveryType'){\r\n              let value = entry[key]\r\n              if (value === 'Assisted delivery (forceps or vent use)'){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[3].jan = janCount\r\n        this.dhisData[3].feb = febCount\r\n        this.dhisData[3].mar = marCount\r\n        this.dhisData[3].apr = aprCount\r\n        this.dhisData[3].may = mayCount\r\n        this.dhisData[3].jun = junCount\r\n        this.dhisData[3].jul = julCount\r\n        this.dhisData[3].aug = augCount\r\n        this.dhisData[3].sep = sepCount\r\n        this.dhisData[3].oct = octCount\r\n        this.dhisData[3].nov = novCount\r\n        this.dhisData[3].dec = decCount\r\n        return vals.length\r\n      },\r\n      getLiveBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[4].jan = janCount\r\n        this.dhisData[4].feb = febCount\r\n        this.dhisData[4].mar = marCount\r\n        this.dhisData[4].apr = aprCount\r\n        this.dhisData[4].may = mayCount\r\n        this.dhisData[4].jun = junCount\r\n        this.dhisData[4].jul = julCount\r\n        this.dhisData[4].aug = augCount\r\n        this.dhisData[4].sep = sepCount\r\n        this.dhisData[4].oct = octCount\r\n        this.dhisData[4].nov = novCount\r\n        this.dhisData[4].dec = decCount\r\n        return vals.length\r\n      },\r\n      getStillBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === false){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[5].jan = janCount\r\n        this.dhisData[5].feb = febCount\r\n        this.dhisData[5].mar = marCount\r\n        this.dhisData[5].apr = aprCount\r\n        this.dhisData[5].may = mayCount\r\n        this.dhisData[5].jun = junCount\r\n        this.dhisData[5].jul = julCount\r\n        this.dhisData[5].aug = augCount\r\n        this.dhisData[5].sep = sepCount\r\n        this.dhisData[5].oct = octCount\r\n        this.dhisData[5].nov = novCount\r\n        this.dhisData[5].dec = decCount\r\n        \r\n        return vals.length\r\n      },\r\n      getFreshStillBirths(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyAlive'){\r\n              let value = entry[key]\r\n              if (value === false){\r\n                if (entry['babyTimeOfDeath'] !== 'before labour'){\r\n                  vals.push(entry['babyTimeOfDeath'])\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === this.yearSelected){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[6].jan = janCount\r\n        this.dhisData[6].feb = febCount\r\n        this.dhisData[6].mar = marCount\r\n        this.dhisData[6].apr = aprCount\r\n        this.dhisData[6].may = mayCount\r\n        this.dhisData[6].jun = junCount\r\n        this.dhisData[6].jul = julCount\r\n        this.dhisData[6].aug = augCount\r\n        this.dhisData[6].sep = sepCount\r\n        this.dhisData[6].oct = octCount\r\n        this.dhisData[6].nov = novCount\r\n        this.dhisData[6].dec = decCount\r\n        \r\n        return vals.length\r\n      },\r\n      getPreterm(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'isPreterm'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[7].jan = janCount\r\n        this.dhisData[7].feb = febCount\r\n        this.dhisData[7].mar = marCount\r\n        this.dhisData[7].apr = aprCount\r\n        this.dhisData[7].may = mayCount\r\n        this.dhisData[7].jun = junCount\r\n        this.dhisData[7].jul = julCount\r\n        this.dhisData[7].aug = augCount\r\n        this.dhisData[7].sep = sepCount\r\n        this.dhisData[7].oct = octCount\r\n        this.dhisData[7].nov = novCount\r\n        this.dhisData[7].dec = decCount\r\n\r\n        return vals.length\r\n      },\r\n      getKMC(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'skinToSkin'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[8].jan = janCount\r\n        this.dhisData[8].feb = febCount\r\n        this.dhisData[8].mar = marCount\r\n        this.dhisData[8].apr = aprCount\r\n        this.dhisData[8].may = mayCount\r\n        this.dhisData[8].jun = junCount\r\n        this.dhisData[8].jul = julCount\r\n        this.dhisData[8].aug = augCount\r\n        this.dhisData[8].sep = sepCount\r\n        this.dhisData[8].oct = octCount\r\n        this.dhisData[8].nov = novCount\r\n        this.dhisData[8].dec = decCount\r\n        return vals.length\r\n      },\r\n      uterotonicReceived(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'uterotonicAdmin'){\r\n              let value = entry[key]\r\n              if (value === true){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[8].jan = janCount\r\n        this.dhisData[8].feb = febCount\r\n        this.dhisData[8].mar = marCount\r\n        this.dhisData[8].apr = aprCount\r\n        this.dhisData[8].may = mayCount\r\n        this.dhisData[8].jun = junCount\r\n        this.dhisData[8].jul = julCount\r\n        this.dhisData[8].aug = augCount\r\n        this.dhisData[8].sep = sepCount\r\n        this.dhisData[8].oct = octCount\r\n        this.dhisData[8].nov = novCount\r\n        this.dhisData[8].dec = decCount\r\n        return vals.length\r\n      },\r\n      breastfed(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'breastfeedingTime'){\r\n              let value = entry[key]\r\n              if (value !== ''){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[9].jan = janCount\r\n        this.dhisData[9].feb = febCount\r\n        this.dhisData[9].mar = marCount\r\n        this.dhisData[9].apr = aprCount\r\n        this.dhisData[9].may = mayCount\r\n        this.dhisData[9].jun = junCount\r\n        this.dhisData[9].jul = julCount\r\n        this.dhisData[9].aug = augCount\r\n        this.dhisData[9].sep = sepCount\r\n        this.dhisData[9].oct = octCount\r\n        this.dhisData[9].nov = novCount\r\n        this.dhisData[9].dec = decCount\r\n        return vals.length\r\n      },\r\n      babiesWeighted(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if (key === 'babyWeight'){\r\n              let value = entry[key]\r\n              if (value !== 0){\r\n                vals.push(value)\r\n                let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                if (year === this.yearSelected){\r\n                  \r\n                  \r\n                  switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                    case 0:\r\n                      janCount += 1\r\n                      break\r\n                    case 1:\r\n                      febCount += 1\r\n                      break\r\n                    case 2:\r\n                      marCount += 1\r\n                      break\r\n                    case 3:\r\n                      aprCount += 1\r\n                      break\r\n                    case 4:\r\n                      mayCount += 1\r\n                      break\r\n                    case 5:\r\n                      junCount += 1\r\n                      break\r\n                    case 6:\r\n                      julCount += 1\r\n                      break\r\n                    case 7:\r\n                      augCount += 1\r\n                      break\r\n                    case 8:\r\n                      sepCount += 1\r\n                      break\r\n                    case 9:\r\n                      octCount += 1\r\n                      break\r\n                    case 10:\r\n                      novCount += 1\r\n                      break\r\n                    case 11:\r\n                      decCount += 1\r\n                      break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[10].jan = janCount\r\n        this.dhisData[10].feb = febCount\r\n        this.dhisData[10].mar = marCount\r\n        this.dhisData[10].apr = aprCount\r\n        this.dhisData[10].may = mayCount\r\n        this.dhisData[10].jun = junCount\r\n        this.dhisData[10].jul = julCount\r\n        this.dhisData[10].aug = augCount\r\n        this.dhisData[10].sep = sepCount\r\n        this.dhisData[10].oct = octCount\r\n        this.dhisData[10].nov = novCount\r\n        this.dhisData[10].dec = decCount\r\n        return vals.length\r\n      },\r\n      femaleLess2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'female' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight <= 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === this.yearSelected){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[11].jan = janCount\r\n        this.dhisData[11].feb = febCount\r\n        this.dhisData[11].mar = marCount\r\n        this.dhisData[11].apr = aprCount\r\n        this.dhisData[11].may = mayCount\r\n        this.dhisData[11].jun = junCount\r\n        this.dhisData[11].jul = julCount\r\n        this.dhisData[11].aug = augCount\r\n        this.dhisData[11].sep = sepCount\r\n        this.dhisData[11].oct = octCount\r\n        this.dhisData[11].nov = novCount\r\n        this.dhisData[11].dec = decCount\r\n        return vals.length\r\n      },\r\n      femaleMore2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'female' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight > 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === this.yearSelected){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        this.dhisData[12].jan = janCount\r\n        this.dhisData[12].feb = febCount\r\n        this.dhisData[12].mar = marCount\r\n        this.dhisData[12].apr = aprCount\r\n        this.dhisData[12].may = mayCount\r\n        this.dhisData[12].jun = junCount\r\n        this.dhisData[12].jul = julCount\r\n        this.dhisData[12].aug = augCount\r\n        this.dhisData[12].sep = sepCount\r\n        this.dhisData[12].oct = octCount\r\n        this.dhisData[12].nov = novCount\r\n        this.dhisData[12].dec = decCount\r\n        return vals.length\r\n      },\r\n      maleLess2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'male' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight <= 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === this.yearSelected){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[13].jan = janCount\r\n        this.dhisData[13].feb = febCount\r\n        this.dhisData[13].mar = marCount\r\n        this.dhisData[13].apr = aprCount\r\n        this.dhisData[13].may = mayCount\r\n        this.dhisData[13].jun = junCount\r\n        this.dhisData[13].jul = julCount\r\n        this.dhisData[13].aug = augCount\r\n        this.dhisData[13].sep = sepCount\r\n        this.dhisData[13].oct = octCount\r\n        this.dhisData[13].nov = novCount\r\n        this.dhisData[13].dec = decCount\r\n        return vals.length\r\n      },\r\n      maleMore2_5(){\r\n        let janCount = 0\r\n        let febCount = 0\r\n        let marCount = 0\r\n        let aprCount = 0\r\n        let mayCount = 0\r\n        let junCount = 0\r\n        let julCount = 0\r\n        let augCount = 0\r\n        let sepCount = 0\r\n        let octCount = 0\r\n        let novCount = 0\r\n        let decCount = 0\r\n        let vals = []\r\n        this.entries.forEach((entry, index) => {\r\n          for (const key in entry){\r\n            if ( key === 'gender'){\r\n              let gender = entry[key]\r\n              let life = entry['babyAlive']\r\n              if (gender === 'male' && life === true){\r\n                \r\n                let weight = entry['babyWeight']\r\n                if (weight > 2.5){\r\n                  vals.push(weight)\r\n                  let year = new Date(entry['dateOfBirth']).getFullYear()\r\n                  if (year === this.yearSelected){\r\n                    \r\n                    \r\n                    switch (new Date(entry['dateOfBirth']).getUTCMonth()){\r\n                      case 0:\r\n                        janCount += 1\r\n                        break\r\n                      case 1:\r\n                        febCount += 1\r\n                        break\r\n                      case 2:\r\n                        marCount += 1\r\n                        break\r\n                      case 3:\r\n                        aprCount += 1\r\n                        break\r\n                      case 4:\r\n                        mayCount += 1\r\n                        break\r\n                      case 5:\r\n                        junCount += 1\r\n                        break\r\n                      case 6:\r\n                        julCount += 1\r\n                        break\r\n                      case 7:\r\n                        augCount += 1\r\n                        break\r\n                      case 8:\r\n                        sepCount += 1\r\n                        break\r\n                      case 9:\r\n                        octCount += 1\r\n                        break\r\n                      case 10:\r\n                        novCount += 1\r\n                        break\r\n                      case 11:\r\n                        decCount += 1\r\n                        break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        this.dhisData[14].jan = janCount\r\n        this.dhisData[14].feb = febCount\r\n        this.dhisData[14].mar = marCount\r\n        this.dhisData[14].apr = aprCount\r\n        this.dhisData[14].may = mayCount\r\n        this.dhisData[14].jun = junCount\r\n        this.dhisData[14].jul = julCount\r\n        this.dhisData[14].aug = augCount\r\n        this.dhisData[14].sep = sepCount\r\n        this.dhisData[14].oct = octCount\r\n        this.dhisData[14].nov = novCount\r\n        this.dhisData[14].dec = decCount\r\n        return vals.length\r\n      },\r\n      setDate() {\r\n\r\n        axios.get(this.urls.getDateFilteredEntries+'/?dateFilter='+this.date)\r\n        .then(res => this.entries = res.data.entries)\r\n        .catch(err => this.$alertify.error('FAILED: ' + err));\r\n      },\r\n      setDateRange(){\r\n        console.log(this.fromDate)\r\n        console.log(this.toDate)\r\n        axios.get(this.urls.getDateRangeFilteredEntries+'/?fromDate='+this.fromDate+'&toDate='+this.toDate)\r\n        .then(res => this.entries = res.data.entries)\r\n        .catch(err => this.$alertify.error('FAILED: ' + err));\r\n        \r\n      },\r\n\r\n      csvExport() {\r\n          var html = document.querySelector(\"table\").outerHTML;\r\n          export_table_to_csv(html, \"DHIS Data Elements.csv\");\r\n      },\r\n      refresh(){\r\n        this.getAllData()\r\n     \r\n\r\n      },\r\n      setTitle(){\r\n        return \"Indicators for :    \" + this.yearSelected\r\n      },\r\n      getYearData(){\r\n        // axios.get(this.urls.getYearFilteredEntries+'/?year='+this.yearSelected)\r\n        // .then(res => this.entries = res.data.entries)\r\n        // .catch(err => this.$alertify.error('FAILED: ' + err));\r\n      }\r\n\r\n    },\r\n\r\n    created() {\r\n      console.log(process.env.NODE_ENV)\r\n      console.log(process.env.VUE_APP_BASE_URL)\r\n\r\n      this.getAllData()\r\n\r\n\r\n      \r\n      \r\n    },\r\n\r\n    mounted(){\r\n      this.getTotalDeliveries()\r\n\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  \r\n\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnnualSummaries.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnnualSummaries.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnnualSummaries.vue?vue&type=template&id=7660d0f5&\"\nimport script from \"./AnnualSummaries.vue?vue&type=script&lang=js&\"\nexport * from \"./AnnualSummaries.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}